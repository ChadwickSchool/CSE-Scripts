#!/usr/bin/env python

import sys
import os
import re
from subprocess import check_output
from collections import defaultdict

# Collect the parameters
commit_msg_filepath = sys.argv[1]

# Figure out which branch we're on
branch = check_output(['git', 'symbolic-ref', '--short', 'HEAD']).strip()
print "On branch '%s'" % branch

# Open up the commit message
with open(commit_msg_filepath, 'r') as f:
    content = f.read()
    lines = content.split("\n")
    is_blank_line = False

    # For each line in the message, check to see if it starts
    # with a commit message starter
    for i in range(len(lines)):
        current_line = lines[i]

        # If it starts with fix/refactor but doesn't have an explanation,
        # exit with failure
        if current_line.startswith("fix: ") or
            current_line.startswith("refactor: "):
            if lines[i+1] is "":
                is_blank_line = True
                if lines[i+2] is "" or lines[i+2].startswith("#"):
                    print "You did not specify a description
                    for your fix/refactor. Exiting..."
                    sys.exit(1)
                elif lines[i+2] is not None:
                    sys.exit(0)
